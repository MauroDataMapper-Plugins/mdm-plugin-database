import java.util.concurrent.TimeUnit

buildscript {
    repositories {
        mavenLocal()
        maven {url 'https://jenkins.cs.ox.ac.uk/artifactory/plugins-snapshot'}
        maven {url 'https://jenkins.cs.ox.ac.uk/artifactory/plugins-release'}
        mavenCentral()
    }
    dependencies {
        classpath "ox.softeng.gradle:oxbrcinformatics-gradle-plugins:$oxbrcinformaticsGradlePluginsVersion"

        // The version of spring-core included is 3.1.3.RELEASE which is incompatible with the grails-gradle-plugin used by all the
        // the Grails modules and causes issues when trying to run-app therefore we exclude it
        classpath("gradle.plugin.com.hierynomus.gradle.plugins:license-gradle-plugin:$licenseGradlePluginVersion") {
            exclude group: 'org.springframework', module: 'spring-core'
        }

        // However without spring-core the license plugin won't work so we need to include it at the top level
        // this version will need to be kept inline with Grails' spring-core
        classpath "org.springframework:spring-core:$licenseGradlePluginSpringCoreOverrideVersion"

        configurations.classpath {
            // check for updates every build
            resolutionStrategy.cacheChangingModulesFor 0, TimeUnit.SECONDS
        }
    }
}

plugins {
    id 'groovy'
}

apply plugin: 'com.github.hierynomus.license'
apply plugin: 'ox.softeng.ox-brc-standard'
apply plugin: 'ox.softeng.ox-brc-artifactory'
apply plugin: 'ox.softeng.static-code-analysis'

jar {
    exclude 'logback.groovy'
}

logger.quiet(
    "Available processors: ${Runtime.runtime.availableProcessors()} | " +
    "Max unit test parallel forks: ${Runtime.runtime.availableProcessors().intdiv(2) ?: 1}")

afterEvaluate {

    configurations.all {
        // check for updates every build
        resolutionStrategy.cacheChangingModulesFor 0, TimeUnit.SECONDS
        resolutionStrategy.cacheDynamicVersionsFor 0, TimeUnit.SECONDS
    }
    tasks.withType(JavaExec) {
        systemProperty 'env.logFileName', project.name
    }
}

apply from: 'dependencies.gradle'
apply from: "${projectDir}/gradle/additions/mdm.gradle"
apply from: "${projectDir}/gradle/additions/staticCodeAnalysis.gradle"
